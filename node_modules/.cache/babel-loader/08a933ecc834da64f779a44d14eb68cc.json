{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\aone\\\\src\\\\components\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport SidebarItem from \"./SidebarItem\";\n\nfunction Sidebar() {\n  _s();\n\n  // URL의 path값을 받아올 수 있다.\n  const pathName = useLocation().pathname;\n  const menus = [{\n    name: \"초기페이지\",\n    path: \"/\"\n  }, {\n    name: \"메인페이지\",\n    path: \"/main\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: menus.map((menu, index) => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: menu.path,\n        children: /*#__PURE__*/_jsxDEV(SidebarItem, {\n          menu: menu,\n          isActive: pathName === menu.path ? true : false // 현재 URL pathname과 객체에 담긴 path값 일치 여부 확인\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sidebar, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/hp/aone/src/components/Sidebar.js"],"names":["React","Link","useLocation","SidebarItem","Sidebar","pathName","pathname","menus","name","path","map","menu","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEjB;AACA,QAAMC,QAAQ,GAAGH,WAAW,GAAGI,QAA/B;AAEA,QAAMC,KAAK,GAAG,CACZ;AAAEC,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GADY,EAEZ;AAAED,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GAFY,CAAd;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,cACGF,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,0BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAED,IAAI,CAACF,IAAf;AAAA,+BACE,QAAC,WAAD;AACE,UAAA,IAAI,EAAEE,IADR;AAEE,UAAA,QAAQ,EAAEN,QAAQ,KAAKM,IAAI,CAACF,IAAlB,GAAyB,IAAzB,GAAgC,KAF5C,CAEmD;;AAFnD;AAAA;AAAA;AAAA;AAAA;AADF,SAA0BG,KAA1B;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAzBQR,O;UAGUF,W;;;KAHVE,O;AA2BT,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport SidebarItem from \"./SidebarItem\";\r\n\r\nfunction Sidebar() {\r\n\r\n  // URL의 path값을 받아올 수 있다.\r\n  const pathName = useLocation().pathname;\r\n\r\n  const menus = [\r\n    { name: \"초기페이지\", path: \"/\" },\r\n    { name: \"메인페이지\", path: \"/main\" },\r\n    \r\n  ];\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {menus.map((menu, index) => {\r\n        return (\r\n          <Link to={menu.path} key={index}>\r\n            <SidebarItem\r\n              menu={menu}\r\n              isActive={pathName === menu.path ? true : false}\t// 현재 URL pathname과 객체에 담긴 path값 일치 여부 확인\r\n            />\r\n          </Link>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}